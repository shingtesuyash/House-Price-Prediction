{"version":3,"sources":["logo.svg","components/loader/loader1.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["Loader1","className","type","color","height","width","Main","useState","location","setLocation","totalsqft","setTotalsqft","bhk","setbhk","bath","setbath","loc","setLoc","estprice","setEstprice","useEffect","Axios","get","then","response","data","locations","console","log","Fragment","class","method","onSubmit","e","preventDefault","document","getElementById","style","display","alert","post","total_sqft","estimated_price","parseFloat","for","value","onChange","target","id","placeholder","selected","map","val","key","role","App","isLoading","setLoading","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3f321908.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react'\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./loader.css\";\r\n\r\nexport const Loader1 = () => {\r\n\r\n  \r\n    return (\r\n        <div className=\"vh-100 bg-dark\">\r\n            <div className=\"loader\">\r\n                <ReactLoading  type={\"bars\"} color={\"#03fc4e\"} height={100} width={100}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useState,useEffect} from 'react'\r\nimport Axios from 'axios';\r\nimport \"./main.css\"\r\nexport const Main = () => {\r\n\r\n    const [location, setLocation] = useState([]);\r\n    const [totalsqft,setTotalsqft]=useState();\r\n    const [bhk,setbhk]=useState();\r\n    const [bath,setbath]=useState();\r\n    const [loc,setLoc]=useState(\"\");\r\n    const [estprice,setEstprice]=useState(\"\");\r\n\r\n    useEffect(()=>{\r\n   \r\n        Axios.get(\"/get_location_names\").then((response)=>{\r\n          // setList(response.data);\r\n          // console.log(response.data);\r\n         setLocation(response.data.locations);\r\n          console.log(location)\r\n        });\r\n        \r\n    },[]);\r\n\r\n    const handleChange = (e) => {\r\n        setLoc(e.target.value);\r\n    };\r\n\r\n    function submit(e){\r\n        e.preventDefault();\r\n        \r\n        if((bath>bhk+2) || bhk==0 || bath ==0 || totalsqft==0 || loc === \"--Select Location--\"){\r\n            document.getElementById(\"err\").style.display=\"flex\";\r\n            alert(\"Please Enter Correct Details!!!\");\r\n            \r\n             return;\r\n        \r\n           }\r\n\r\n        Axios.post(\"/predict_home_price\",{\r\n      \r\n        location:loc,\r\n        bhk:bhk,\r\n        bath:bath,\r\n        total_sqft:totalsqft\r\n      \r\n      }).then((response)=>{\r\n      console.log(response.data.estimated_price)\r\n\r\n      if(parseFloat(response.data.estimated_price)<0){\r\n        document.getElementById(\"err\").style.display=\"flex\";\r\n        alert(\"Please Enter Correct Details!!!\");\r\n        \r\n         return;\r\n      }\r\n\r\n      setEstprice(response.data.estimated_price+\" LAC\")\r\n      });\r\n        \r\n      \r\n      }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header>\r\n\t            <div class=\"overlay\">\r\n                    <h1>House Price Prediction</h1>\r\n\r\n\t\t        </div>\r\n            </header>\r\n            <div class=\"container pt-2\">\r\n            <form method=\"post\" onSubmit={submit}>\r\n            <div class=\"content text-center\">\r\n            <div class=\"form-group row m-2\">\r\n                <label for=\"inputEmail3\" class=\"tm col-sm-2 col-form-label\">Total sqft </label>\r\n                <div class=\"col-sm-10\">\r\n                    <input value={totalsqft} onChange={(e)=>setTotalsqft(e.target.value)} type=\"number\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Enter the area\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row m-2\">\r\n                <label for=\"inputEmail3\" class=\"tm col-sm-2 col-form-label\">Bedroom </label>\r\n                <div class=\"col-sm-10\">\r\n                    <input  value={bhk}   onChange={(e)=>setbhk(e.target.value)} type=\"number\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Number of Bedrooms\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row m-2\">\r\n                <label for=\"inputEmail3\" class=\"tm col-sm-2 col-form-label\">Bathroom</label>\r\n                <div class=\"col-sm-10\">\r\n                    <input  value={bath}   onChange={(e)=>setbath(e.target.value)} type=\"number\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Number of Bathrooms\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row m-2\">\r\n                <label for=\"inputEmail3\" class=\"tm col-sm-2 col-form-label\">Location</label>\r\n                <div class=\"col-sm-10\">\r\n                <select value={loc} onChange={handleChange} class=\"w-100 h-100 rounded\" id=\"exampleFormControlSelect1\" >\r\n                    <option  selected=\"selected\" value=\"--Select Location--\">--Select Location--</option>\r\n                    {\r\n                        \r\n                        location.map((val,key)=>{\r\n                          return (\r\n                            <option value={val} >{val}</option>\r\n                          )\r\n                        })\r\n                      }\r\n                </select>\r\n\r\n                </div>\r\n            </div>\r\n            <h7 id=\"err\"><strong style={{color:\"red\"}}>**</strong>Please enter correct details and make sure to select the location</h7>\r\n            <button id=\"submitbtn\" type=\"submit\" class=\"button-72 m-2 mx-auto\" role=\"button\">Predict</button>\r\n        </div> \r\n            </form> \r\n\r\n    </div>\r\n    <div class=\"est s1 pt-2\">\r\n    <span> <strong> Estimated Price : </strong> </span> <strong>{estprice}  </strong>  \r\n        </div> \r\n        </React.Fragment>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { useState,useEffect } from 'react';\nimport { Loader1 } from './components/loader/loader1';\nimport { Main } from './components/main/main';\n\n\nfunction App() {\n  const [isLoading,setLoading]=useState(true);\n\n  function rep(){\n      setLoading(false);\n  }\n  \n\n\n\nuseEffect(()=>{\n    setTimeout(()=>rep(),5000)\n})\n\n  return (\n    <div className=\"App\">\n      {isLoading? <Loader1 />:<Main />}\n      {/* <Main /> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}